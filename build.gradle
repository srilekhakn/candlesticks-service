import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.jetbrains.kotlin.jvm' version '1.8.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
}

group = 'com.srilekha'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'


	implementation(platform("org.http4k:http4k-bom:4.34.0.3"))
	implementation("org.http4k:http4k-core")
	implementation("org.http4k:http4k-server-netty")
	implementation("org.http4k:http4k-client-websocket")
	implementation("org.http4k:http4k-format-jackson")

	implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin:2.14.0")
	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.0")
	testImplementation("io.mockk:mockk:1.13.2")
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
